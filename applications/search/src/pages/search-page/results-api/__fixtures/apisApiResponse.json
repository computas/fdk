{
  "total": 4,
  "hits": [
    {
      "id": "7d13645a-0d64-4af9-8a19-3a602713115a",
      "apiSpecUrl": "jar:file:/app.jar!/BOOT-INF/classes!/seres-api.json",
      "title": {
        "no": "SERES3 REPOSITORY"
      },
      "description": {
        "no": "Modellkatalogtjeneste for SERES - domeneklient"
      },
      "provenance": {
        "uri": "http://data.brreg.no/datakatalog/provinens",
        "prefLabel": {
          "no": "Opphav",
          "en": "Provinens"
        }
      },
      "publisher": {
        "uri": "http://data.brreg.no/enhetsregisteret/enhet/974760673",
        "id": "974760673",
        "name": "REGISTERENHETEN I BRØNNØYSUND",
        "orgPath": "/STAT/912660680/974760673",
        "prefLabel": {
          "no": "Brønnøysundregistrene"
        }
      },
      "contactPoint": [
        {
          "uri": "http://www.brreg.no/",
          "email": "seres@brreg.no",
          "organizationName": "SERES brukerstøtte"
        }
      ],
      "formats": [
        "application/json;charset=UTF-8"
      ],
      "openApi": {
        "openapi": "3.0.1",
        "info": {
          "title": "SERES3 REPOSITORY",
          "description": "Modellkatalogtjeneste for SERES - domeneklient",
          "termsOfService": "Terms of service",
          "contact": {
            "name": "SERES brukerstøtte",
            "url": "http://www.brreg.no/",
            "email": "seres@brreg.no"
          },
          "license": {
            "name": "License of API",
            "url": "API license URL",
            "extensions": {}
          },
          "version": "1.0",
          "extensions": {}
        },
        "servers": [
          {
            "url": "//repository-test-seres-ut1.paas-nprd.brreg.no/"
          }
        ],
        "tags": [
          {
            "name": "catalog-controller",
            "description": "Catalog Controller",
            "extensions": {}
          },
          {
            "name": "change-controller",
            "description": "Change Controller",
            "extensions": {}
          },
          {
            "name": "domain-controller",
            "description": "Domain Controller",
            "extensions": {}
          },
          {
            "name": "model-controller",
            "description": "Model Controller",
            "extensions": {}
          },
          {
            "name": "version-controller",
            "description": "Version Controller",
            "extensions": {}
          }
        ],
        "paths": {
          "/seres/v1/repository/catalogs": {
            "get": {
              "tags": [
                "catalog-controller"
              ],
              "summary": "list all catalogs",
              "description": "Returns a list of all catalogs stored by the repository (currently restriced to 1000 catalogs)",
              "operationId": "listCatalogUsingGET",
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Catalog",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "post": {
              "tags": [
                "catalog-controller"
              ],
              "summary": "create a catalog",
              "description": "Returns the created catalog",
              "operationId": "createCatalogUsingPOST",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "query",
                  "description": "unique identifier of the catalog, usually a 9-digit (orgnumber)",
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "title",
                  "in": "query",
                  "description": "the title of the catalog",
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Catalog",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}": {
            "get": {
              "tags": [
                "catalog-controller"
              ],
              "summary": "get a specific catalog",
              "description": "Returns the catalog",
              "operationId": "getCatalogUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "the catalog identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Catalog",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "put": {
              "tags": [
                "catalog-controller"
              ],
              "summary": "update the catalog",
              "description": "returns the updated catalog",
              "operationId": "updateCatalogUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "the catalog's unique identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "the catalog with updated values",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Catalog"
                    }
                  }
                },
                "required": false
              },
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Catalog",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/domains": {
            "get": {
              "tags": [
                "domain-controller"
              ],
              "summary": "list domains",
              "description": "Returns a list of all domains under a specific catalog",
              "operationId": "listDomainsUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "type": "array",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "post": {
              "tags": [
                "domain-controller"
              ],
              "summary": "create a domain",
              "description": "Returns the created domain",
              "operationId": "createDomainUsingPOST",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "title",
                  "in": "query",
                  "description": "the title of the domain",
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Domain",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicauth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}": {
            "get": {
              "tags": [
                "domain-controller"
              ],
              "summary": "get a domain",
              "description": "Returns the domain object requested",
              "operationId": "getDomainUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Domain",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "put": {
              "tags": [
                "domain-controller"
              ],
              "summary": "update a domain",
              "description": "Updates the domain object",
              "operationId": "updateDomainUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain identifier (base36)",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "the updated domain object",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Domain"
                    }
                  }
                },
                "required": false
              },
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Domain",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicauth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/models": {
            "get": {
              "tags": [
                "model-controller"
              ],
              "summary": "list models",
              "description": "Returns a the list of model objects in a domain",
              "operationId": "listModelsUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "type": "array",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "post": {
              "tags": [
                "model-controller"
              ],
              "summary": "create a model",
              "description": "Returns the created model object",
              "operationId": "createModelUsingPOST",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "title",
                  "in": "query",
                  "description": "title",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "type",
                  "in": "query",
                  "description": "type",
                  "schema": {
                    "type": "string",
                    "extensions": {},
                    "default": "tjenestemodell"
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Model",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}": {
            "get": {
              "tags": [
                "model-controller"
              ],
              "summary": "get a model",
              "description": "Returns a model object",
              "operationId": "getModelUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Model",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "put": {
              "tags": [
                "model-controller"
              ],
              "summary": "update a model",
              "description": "Updated the values of the model object",
              "operationId": "updateModelUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "updatedModel",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Model"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Model",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/versions": {
            "get": {
              "tags": [
                "version-controller"
              ],
              "summary": "list versions",
              "description": "Returns a list of version objects",
              "operationId": "listVersionsUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "type": "array",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "post": {
              "tags": [
                "version-controller"
              ],
              "summary": "create a version",
              "description": "Create the model version from scratch",
              "operationId": "createVersionUsingPOST",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "title",
                  "in": "query",
                  "description": "title",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "data",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ModelData"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}": {
            "get": {
              "tags": [
                "version-controller"
              ],
              "summary": "get a version object",
              "description": "get a specific version object",
              "operationId": "getVersionUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "put": {
              "tags": [
                "version-controller"
              ],
              "summary": "update a version",
              "description": "creates a new version object by copying it from another version",
              "operationId": "updateVersionUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "updatedVersion",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ModelVersion"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "delete": {
              "tags": [
                "version-controller"
              ],
              "summary": "delete a version",
              "description": "deletes the refered version",
              "operationId": "deleteVersionUsingDELETE",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "type": "boolean",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "204": {
                  "description": "No Content",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/approve": {
            "put": {
              "tags": [
                "version-controller"
              ],
              "summary": "set state to 'publisert'",
              "description": "changes the version state attribute to approved",
              "operationId": "setStateToApproveUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/copy": {
            "post": {
              "tags": [
                "version-controller"
              ],
              "summary": "create a version by copy",
              "description": "creates a new version object by copying it from another version",
              "operationId": "copyVersionUsingPOST",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "the identifier of the model of which to store the new version in, must be within the domain and catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "the identifier of the source version to copy from",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/data": {
            "get": {
              "tags": [
                "version-controller"
              ],
              "summary": "getModel",
              "operationId": "getModelUsingGET_1",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/history": {
            "put": {
              "tags": [
                "version-controller"
              ],
              "summary": "set state to 'historisk'",
              "description": "changes the version state attribute to historic",
              "operationId": "setStateToHistoryUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/reject": {
            "put": {
              "tags": [
                "version-controller"
              ],
              "summary": "set state to 'forkastet'",
              "description": "changes the version state attribute to rejected",
              "operationId": "setStateToRejectedUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/versions/{versionReference}/changelog": {
            "get": {
              "tags": [
                "change-controller"
              ],
              "summary": "version changelog",
              "description": "Returns the change events that has occured to a specific model-version. Pagination is required: ?page=0&size=20",
              "operationId": "listChangeEventsUsingGET",
              "parameters": [
                {
                  "name": "versionReference",
                  "in": "path",
                  "description": "the version reference catalogId_domainId_modelId_versionId_versionNumber",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/VersionChangeEvent",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "extensions": {}
          }
        },
        "components": {
          "schemas": {
            "ModelData": {
              "title": "ModelData",
              "type": "object",
              "properties": {
                "manifest": {
                  "type": "string",
                  "extensions": {}
                },
                "value": {
                  "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                  "type": "string",
                  "format": "byte",
                  "extensions": {}
                }
              }
            },
            "VersionChangeRecord": {
              "title": "VersionChangeRecord",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "extensions": {}
                },
                "operation": {
                  "type": "string",
                  "extensions": {}
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "userId": {
                  "type": "string",
                  "extensions": {}
                },
                "versionReference": {
                  "type": "string",
                  "extensions": {}
                },
                "versionState": {
                  "$ref": "#/components/schemas/ModelVersion",
                  "extensions": {}
                }
              }
            },
            "ModelImport": {
              "title": "ModelImport",
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "extensions": {}
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "versionReference": {
                  "type": "string",
                  "extensions": {}
                }
              }
            },
            "VersionChangeEvent": {
              "title": "VersionChangeEvent",
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "extensions": {}
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "userId": {
                  "type": "string",
                  "extensions": {}
                },
                "versionReference": {
                  "type": "string",
                  "extensions": {}
                },
                "versionState": {
                  "$ref": "#/components/schemas/ModelVersion",
                  "extensions": {}
                }
              }
            },
            "Model": {
              "title": "Model",
              "type": "object",
              "properties": {
                "catalogId": {
                  "type": "string",
                  "extensions": {}
                },
                "domainId": {
                  "type": "string",
                  "extensions": {}
                },
                "id": {
                  "type": "string",
                  "extensions": {}
                },
                "state": {
                  "type": "string",
                  "extensions": {}
                },
                "title": {
                  "type": "string",
                  "extensions": {}
                },
                "type": {
                  "type": "string",
                  "extensions": {}
                },
                "useFrom": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "useTo": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                }
              }
            },
            "ModelVersion": {
              "title": "ModelVersion",
              "type": "object",
              "properties": {
                "catalogId": {
                  "type": "string",
                  "extensions": {}
                },
                "data": {
                  "$ref": "#/components/schemas/ModelData",
                  "extensions": {}
                },
                "domainId": {
                  "type": "string",
                  "extensions": {}
                },
                "id": {
                  "type": "string",
                  "extensions": {}
                },
                "imports": {
                  "type": "array",
                  "extensions": {}
                },
                "lastChanged": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "modelId": {
                  "type": "string",
                  "extensions": {}
                },
                "sourceVersion": {
                  "type": "string",
                  "extensions": {}
                },
                "status": {
                  "type": "string",
                  "extensions": {}
                },
                "title": {
                  "type": "string",
                  "extensions": {}
                },
                "useFrom": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "useTo": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "user": {
                  "type": "string",
                  "extensions": {}
                },
                "versionInfo": {
                  "type": "string",
                  "extensions": {}
                },
                "versionNumber": {
                  "type": "integer",
                  "format": "int32",
                  "extensions": {}
                }
              }
            },
            "Domain": {
              "title": "Domain",
              "type": "object",
              "properties": {
                "catalogId": {
                  "type": "string",
                  "extensions": {}
                },
                "id": {
                  "type": "string",
                  "extensions": {}
                },
                "state": {
                  "type": "string",
                  "extensions": {}
                },
                "title": {
                  "type": "string",
                  "extensions": {}
                }
              }
            },
            "Catalog": {
              "title": "Catalog",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "extensions": {}
                },
                "title": {
                  "type": "string",
                  "extensions": {}
                }
              }
            }
          }
        }
      },
      "apiSpec": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"description\": \"Modellkatalogtjeneste for SERES - domeneklient\",\n    \"version\": \"1.0\",\n    \"title\": \"SERES3 REPOSITORY\",\n    \"termsOfService\": \"Terms of service\",\n    \"contact\": {\n      \"name\": \"SERES brukerstøtte\",\n      \"url\": \"http://www.brreg.no/\",\n      \"email\": \"seres@brreg.no\"\n    },\n    \"license\": {\n      \"name\": \"License of API\",\n      \"url\": \"API license URL\"\n    }\n  },\n  \"host\": \"repository-test-seres-ut1.paas-nprd.brreg.no\",\n  \"basePath\": \"/\",\n  \"tags\": [{\n    \"name\": \"catalog-controller\",\n    \"description\": \"Catalog Controller\"\n  }, {\n    \"name\": \"change-controller\",\n    \"description\": \"Change Controller\"\n  }, {\n    \"name\": \"domain-controller\",\n    \"description\": \"Domain Controller\"\n  }, {\n    \"name\": \"model-controller\",\n    \"description\": \"Model Controller\"\n  }, {\n    \"name\": \"version-controller\",\n    \"description\": \"Version Controller\"\n  }\n  ],\n  \"paths\": {\n    \"/seres/v1/repository/catalogs\": {\n      \"get\": {\n        \"tags\": [\"catalog-controller\"],\n        \"summary\": \"list all catalogs\",\n        \"description\": \"Returns a list of all catalogs stored by the repository (currently restriced to 1000 catalogs)\",\n        \"operationId\": \"listCatalogUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Catalog\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"catalog-controller\"],\n        \"summary\": \"create a catalog\",\n        \"description\": \"Returns the created catalog\",\n        \"operationId\": \"createCatalogUsingPOST\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"query\",\n          \"description\": \"unique identifier of the catalog, usually a 9-digit (orgnumber)\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"title\",\n          \"in\": \"query\",\n          \"description\": \"the title of the catalog\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Catalog\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}\": {\n      \"get\": {\n        \"tags\": [\"catalog-controller\"],\n        \"summary\": \"get a specific catalog\",\n        \"description\": \"Returns the catalog\",\n        \"operationId\": \"getCatalogUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"the catalog identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Catalog\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"catalog-controller\"],\n        \"summary\": \"update the catalog\",\n        \"description\": \"returns the updated catalog\",\n        \"operationId\": \"updateCatalogUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"the catalog's unique identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"in\": \"body\",\n          \"name\": \"updatedCatalog\",\n          \"description\": \"the catalog with updated values\",\n          \"required\": false,\n          \"schema\": {\n            \"$ref\": \"#/definitions/Catalog\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Catalog\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/domains\": {\n      \"get\": {\n        \"tags\": [\"domain-controller\"],\n        \"summary\": \"list domains\",\n        \"description\": \"Returns a list of all domains under a specific catalog\",\n        \"operationId\": \"listDomainsUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/Domain\"\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"domain-controller\"],\n        \"summary\": \"create a domain\",\n        \"description\": \"Returns the created domain\",\n        \"operationId\": \"createDomainUsingPOST\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"title\",\n          \"in\": \"query\",\n          \"description\": \"the title of the domain\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Domain\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicauth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}\": {\n      \"get\": {\n        \"tags\": [\"domain-controller\"],\n        \"summary\": \"get a domain\",\n        \"description\": \"Returns the domain object requested\",\n        \"operationId\": \"getDomainUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Domain\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"domain-controller\"],\n        \"summary\": \"update a domain\",\n        \"description\": \"Updates the domain object\",\n        \"operationId\": \"updateDomainUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain identifier (base36)\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"in\": \"body\",\n          \"name\": \"updatedDomain\",\n          \"description\": \"the updated domain object\",\n          \"required\": false,\n          \"schema\": {\n            \"$ref\": \"#/definitions/Domain\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Domain\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicauth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/models\": {\n      \"get\": {\n        \"tags\": [\"model-controller\"],\n        \"summary\": \"list models\",\n        \"description\": \"Returns a the list of model objects in a domain\",\n        \"operationId\": \"listModelsUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/Model\"\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"model-controller\"],\n        \"summary\": \"create a model\",\n        \"description\": \"Returns the created model object\",\n        \"operationId\": \"createModelUsingPOST\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"title\",\n          \"in\": \"query\",\n          \"description\": \"title\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"type\",\n          \"in\": \"query\",\n          \"description\": \"type\",\n          \"required\": false,\n          \"type\": \"string\",\n          \"default\": \"tjenestemodell\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Model\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}\": {\n      \"get\": {\n        \"tags\": [\"model-controller\"],\n        \"summary\": \"get a model\",\n        \"description\": \"Returns a model object\",\n        \"operationId\": \"getModelUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Model\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"model-controller\"],\n        \"summary\": \"update a model\",\n        \"description\": \"Updated the values of the model object\",\n        \"operationId\": \"updateModelUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"in\": \"body\",\n          \"name\": \"updatedModel\",\n          \"description\": \"updatedModel\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/definitions/Model\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Model\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/versions\": {\n      \"get\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"list versions\",\n        \"description\": \"Returns a list of version objects\",\n        \"operationId\": \"listVersionsUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/ModelVersion\"\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"create a version\",\n        \"description\": \"Create the model version from scratch\",\n        \"operationId\": \"createVersionUsingPOST\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"title\",\n          \"in\": \"query\",\n          \"description\": \"title\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"in\": \"body\",\n          \"name\": \"data\",\n          \"description\": \"data\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/definitions/ModelData\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}\": {\n      \"get\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"get a version object\",\n        \"description\": \"get a specific version object\",\n        \"operationId\": \"getVersionUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"update a version\",\n        \"description\": \"creates a new version object by copying it from another version\",\n        \"operationId\": \"updateVersionUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"in\": \"body\",\n          \"name\": \"updatedVersion\",\n          \"description\": \"updatedVersion\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/definitions/ModelVersion\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"delete a version\",\n        \"description\": \"deletes the refered version\",\n        \"operationId\": \"deleteVersionUsingDELETE\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/approve\": {\n      \"put\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"set state to 'publisert'\",\n        \"description\": \"changes the version state attribute to approved\",\n        \"operationId\": \"setStateToApproveUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/copy\": {\n      \"post\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"create a version by copy\",\n        \"description\": \"creates a new version object by copying it from another version\",\n        \"operationId\": \"copyVersionUsingPOST\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"the identifier of the model of which to store the new version in, must be within the domain and catalog\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"the identifier of the source version to copy from\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/data\": {\n      \"get\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"getModel\",\n        \"operationId\": \"getModelUsingGET_1\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/history\": {\n      \"put\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"set state to 'historisk'\",\n        \"description\": \"changes the version state attribute to historic\",\n        \"operationId\": \"setStateToHistoryUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/reject\": {\n      \"put\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"set state to 'forkastet'\",\n        \"description\": \"changes the version state attribute to rejected\",\n        \"operationId\": \"setStateToRejectedUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/versions/{versionReference}/changelog\": {\n      \"get\": {\n        \"tags\": [\"change-controller\"],\n        \"summary\": \"version changelog\",\n        \"description\": \"Returns the change events that has occured to a specific model-version. Pagination is required: ?page=0&size=20\",\n        \"operationId\": \"listChangeEventsUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"versionReference\",\n          \"in\": \"path\",\n          \"description\": \"the version reference catalogId_domainId_modelId_versionId_versionNumber\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/VersionChangeEvent\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    }\n  },\n  \"definitions\": {\n    \"Catalog\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        }\n      },\n      \"title\": \"Catalog\"\n    },\n    \"Domain\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"catalogId\": {\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"state\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        }\n      },\n      \"title\": \"Domain\"\n    },\n    \"Model\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"catalogId\": {\n          \"type\": \"string\"\n        },\n        \"domainId\": {\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"state\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"type\": \"string\"\n        },\n        \"useFrom\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"useTo\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        }\n      },\n      \"title\": \"Model\"\n    },\n    \"ModelData\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"manifest\": {\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"type\": \"string\",\n          \"format\": \"byte\"\n        }\n      },\n      \"title\": \"ModelData\"\n    },\n    \"ModelImport\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"models\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"timestamp\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"versionReference\": {\n          \"type\": \"string\"\n        }\n      },\n      \"title\": \"ModelImport\"\n    },\n    \"ModelVersion\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"catalogId\": {\n          \"type\": \"string\"\n        },\n        \"data\": {\n          \"$ref\": \"#/definitions/ModelData\"\n        },\n        \"domainId\": {\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"imports\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/ModelImport\"\n          }\n        },\n        \"lastChanged\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"modelId\": {\n          \"type\": \"string\"\n        },\n        \"sourceVersion\": {\n          \"type\": \"string\"\n        },\n        \"status\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"useFrom\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"useTo\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"user\": {\n          \"type\": \"string\"\n        },\n        \"versionInfo\": {\n          \"type\": \"string\"\n        },\n        \"versionNumber\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      },\n      \"title\": \"ModelVersion\"\n    },\n    \"VersionChangeEvent\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"operation\": {\n          \"type\": \"string\"\n        },\n        \"timestamp\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"userId\": {\n          \"type\": \"string\"\n        },\n        \"versionReference\": {\n          \"type\": \"string\"\n        },\n        \"versionState\": {\n          \"$ref\": \"#/definitions/ModelVersion\"\n        }\n      },\n      \"title\": \"VersionChangeEvent\"\n    },\n    \"VersionChangeRecord\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"operation\": {\n          \"type\": \"string\"\n        },\n        \"timestamp\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"userId\": {\n          \"type\": \"string\"\n        },\n        \"versionReference\": {\n          \"type\": \"string\"\n        },\n        \"versionState\": {\n          \"$ref\": \"#/definitions/ModelVersion\"\n        }\n      },\n      \"title\": \"VersionChangeRecord\"\n    }\n  }\n}\n"
    },
    {
      "id": "ecf33771-b392-4330-8bbd-0edd80ce95e5",
      "apiSpecUrl": "file:/Users/markko/dev/fdk/applications/api-cat/target/classes/seres-api.json",
      "title": {
        "no": "SERES3 REPOSITORY"
      },
      "description": {
        "no": "Modellkatalogtjeneste for SERES - domeneklient"
      },
      "provenance": {
        "uri": "http://data.brreg.no/datakatalog/provinens",
        "prefLabel": {
          "no": "Opphav",
          "en": "Provinens"
        }
      },
      "publisher": {
        "uri": "http://data.brreg.no/enhetsregisteret/enhet/974760673",
        "id": "974760673",
        "name": "REGISTERENHETEN I BRØNNØYSUND",
        "orgPath": "/STAT/912660680/974760673",
        "prefLabel": {
          "no": "Brønnøysundregistrene"
        }
      },
      "contactPoint": [
        {
          "uri": "http://www.brreg.no/",
          "email": "seres@brreg.no",
          "organizationName": "SERES brukerstøtte"
        }
      ],
      "formats": [
        "application/json;charset=UTF-8"
      ],
      "openApi": {
        "openapi": "3.0.1",
        "info": {
          "title": "SERES3 REPOSITORY",
          "description": "Modellkatalogtjeneste for SERES - domeneklient",
          "termsOfService": "Terms of service",
          "contact": {
            "name": "SERES brukerstøtte",
            "url": "http://www.brreg.no/",
            "email": "seres@brreg.no"
          },
          "license": {
            "name": "License of API",
            "url": "API license URL",
            "extensions": {}
          },
          "version": "1.0",
          "extensions": {}
        },
        "servers": [
          {
            "url": "//repository-test-seres-ut1.paas-nprd.brreg.no/"
          }
        ],
        "tags": [
          {
            "name": "catalog-controller",
            "description": "Catalog Controller",
            "extensions": {}
          },
          {
            "name": "change-controller",
            "description": "Change Controller",
            "extensions": {}
          },
          {
            "name": "domain-controller",
            "description": "Domain Controller",
            "extensions": {}
          },
          {
            "name": "model-controller",
            "description": "Model Controller",
            "extensions": {}
          },
          {
            "name": "version-controller",
            "description": "Version Controller",
            "extensions": {}
          }
        ],
        "paths": {
          "/seres/v1/repository/catalogs": {
            "get": {
              "tags": [
                "catalog-controller"
              ],
              "summary": "list all catalogs",
              "description": "Returns a list of all catalogs stored by the repository (currently restriced to 1000 catalogs)",
              "operationId": "listCatalogUsingGET",
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Catalog",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "post": {
              "tags": [
                "catalog-controller"
              ],
              "summary": "create a catalog",
              "description": "Returns the created catalog",
              "operationId": "createCatalogUsingPOST",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "query",
                  "description": "unique identifier of the catalog, usually a 9-digit (orgnumber)",
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "title",
                  "in": "query",
                  "description": "the title of the catalog",
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Catalog",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}": {
            "get": {
              "tags": [
                "catalog-controller"
              ],
              "summary": "get a specific catalog",
              "description": "Returns the catalog",
              "operationId": "getCatalogUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "the catalog identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Catalog",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "put": {
              "tags": [
                "catalog-controller"
              ],
              "summary": "update the catalog",
              "description": "returns the updated catalog",
              "operationId": "updateCatalogUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "the catalog's unique identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "the catalog with updated values",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Catalog"
                    }
                  }
                },
                "required": false
              },
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Catalog",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/domains": {
            "get": {
              "tags": [
                "domain-controller"
              ],
              "summary": "list domains",
              "description": "Returns a list of all domains under a specific catalog",
              "operationId": "listDomainsUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "type": "array",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "post": {
              "tags": [
                "domain-controller"
              ],
              "summary": "create a domain",
              "description": "Returns the created domain",
              "operationId": "createDomainUsingPOST",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "title",
                  "in": "query",
                  "description": "the title of the domain",
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Domain",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicauth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}": {
            "get": {
              "tags": [
                "domain-controller"
              ],
              "summary": "get a domain",
              "description": "Returns the domain object requested",
              "operationId": "getDomainUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Domain",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "put": {
              "tags": [
                "domain-controller"
              ],
              "summary": "update a domain",
              "description": "Updates the domain object",
              "operationId": "updateDomainUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain identifier (base36)",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "the updated domain object",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Domain"
                    }
                  }
                },
                "required": false
              },
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Domain",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicauth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/models": {
            "get": {
              "tags": [
                "model-controller"
              ],
              "summary": "list models",
              "description": "Returns a the list of model objects in a domain",
              "operationId": "listModelsUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "type": "array",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "post": {
              "tags": [
                "model-controller"
              ],
              "summary": "create a model",
              "description": "Returns the created model object",
              "operationId": "createModelUsingPOST",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "title",
                  "in": "query",
                  "description": "title",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "type",
                  "in": "query",
                  "description": "type",
                  "schema": {
                    "type": "string",
                    "extensions": {},
                    "default": "tjenestemodell"
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Model",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}": {
            "get": {
              "tags": [
                "model-controller"
              ],
              "summary": "get a model",
              "description": "Returns a model object",
              "operationId": "getModelUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Model",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "put": {
              "tags": [
                "model-controller"
              ],
              "summary": "update a model",
              "description": "Updated the values of the model object",
              "operationId": "updateModelUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "updatedModel",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/Model"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/Model",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/versions": {
            "get": {
              "tags": [
                "version-controller"
              ],
              "summary": "list versions",
              "description": "Returns a list of version objects",
              "operationId": "listVersionsUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "type": "array",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "post": {
              "tags": [
                "version-controller"
              ],
              "summary": "create a version",
              "description": "Create the model version from scratch",
              "operationId": "createVersionUsingPOST",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "title",
                  "in": "query",
                  "description": "title",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "data",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ModelData"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}": {
            "get": {
              "tags": [
                "version-controller"
              ],
              "summary": "get a version object",
              "description": "get a specific version object",
              "operationId": "getVersionUsingGET",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "put": {
              "tags": [
                "version-controller"
              ],
              "summary": "update a version",
              "description": "creates a new version object by copying it from another version",
              "operationId": "updateVersionUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "updatedVersion",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/ModelVersion"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "delete": {
              "tags": [
                "version-controller"
              ],
              "summary": "delete a version",
              "description": "deletes the refered version",
              "operationId": "deleteVersionUsingDELETE",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "type": "boolean",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "204": {
                  "description": "No Content",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/approve": {
            "put": {
              "tags": [
                "version-controller"
              ],
              "summary": "set state to 'publisert'",
              "description": "changes the version state attribute to approved",
              "operationId": "setStateToApproveUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/copy": {
            "post": {
              "tags": [
                "version-controller"
              ],
              "summary": "create a version by copy",
              "description": "creates a new version object by copying it from another version",
              "operationId": "copyVersionUsingPOST",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain identifier",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "the identifier of the model of which to store the new version in, must be within the domain and catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "the identifier of the source version to copy from",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/data": {
            "get": {
              "tags": [
                "version-controller"
              ],
              "summary": "getModel",
              "operationId": "getModelUsingGET_1",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/history": {
            "put": {
              "tags": [
                "version-controller"
              ],
              "summary": "set state to 'historisk'",
              "description": "changes the version state attribute to historic",
              "operationId": "setStateToHistoryUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/reject": {
            "put": {
              "tags": [
                "version-controller"
              ],
              "summary": "set state to 'forkastet'",
              "description": "changes the version state attribute to rejected",
              "operationId": "setStateToRejectedUsingPUT",
              "parameters": [
                {
                  "name": "catalog",
                  "in": "path",
                  "description": "catalog",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "domain",
                  "in": "path",
                  "description": "domain",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "model",
                  "in": "path",
                  "description": "model",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                },
                {
                  "name": "version",
                  "in": "path",
                  "description": "version",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/ModelVersion",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "201": {
                  "description": "Created",
                  "content": {},
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "security": [
                {
                  "basicAuth": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/seres/v1/repository/versions/{versionReference}/changelog": {
            "get": {
              "tags": [
                "change-controller"
              ],
              "summary": "version changelog",
              "description": "Returns the change events that has occured to a specific model-version. Pagination is required: ?page=0&size=20",
              "operationId": "listChangeEventsUsingGET",
              "parameters": [
                {
                  "name": "versionReference",
                  "in": "path",
                  "description": "the version reference catalogId_domainId_modelId_versionId_versionNumber",
                  "required": true,
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "OK",
                  "content": {
                    "application/json;charset=UTF-8": {
                      "schema": {
                        "$ref": "#/components/schemas/VersionChangeEvent",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Unauthorized",
                  "content": {},
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden",
                  "content": {},
                  "extensions": {}
                },
                "404": {
                  "description": "Not Found",
                  "content": {},
                  "extensions": {}
                }
              },
              "extensions": {}
            },
            "extensions": {}
          }
        },
        "components": {
          "schemas": {
            "ModelData": {
              "title": "ModelData",
              "type": "object",
              "properties": {
                "manifest": {
                  "type": "string",
                  "extensions": {}
                },
                "value": {
                  "pattern": "^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$",
                  "type": "string",
                  "format": "byte",
                  "extensions": {}
                }
              }
            },
            "VersionChangeRecord": {
              "title": "VersionChangeRecord",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "extensions": {}
                },
                "operation": {
                  "type": "string",
                  "extensions": {}
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "userId": {
                  "type": "string",
                  "extensions": {}
                },
                "versionReference": {
                  "type": "string",
                  "extensions": {}
                },
                "versionState": {
                  "$ref": "#/components/schemas/ModelVersion",
                  "extensions": {}
                }
              }
            },
            "ModelImport": {
              "title": "ModelImport",
              "type": "object",
              "properties": {
                "models": {
                  "type": "array",
                  "extensions": {}
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "versionReference": {
                  "type": "string",
                  "extensions": {}
                }
              }
            },
            "VersionChangeEvent": {
              "title": "VersionChangeEvent",
              "type": "object",
              "properties": {
                "operation": {
                  "type": "string",
                  "extensions": {}
                },
                "timestamp": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "userId": {
                  "type": "string",
                  "extensions": {}
                },
                "versionReference": {
                  "type": "string",
                  "extensions": {}
                },
                "versionState": {
                  "$ref": "#/components/schemas/ModelVersion",
                  "extensions": {}
                }
              }
            },
            "Model": {
              "title": "Model",
              "type": "object",
              "properties": {
                "catalogId": {
                  "type": "string",
                  "extensions": {}
                },
                "domainId": {
                  "type": "string",
                  "extensions": {}
                },
                "id": {
                  "type": "string",
                  "extensions": {}
                },
                "state": {
                  "type": "string",
                  "extensions": {}
                },
                "title": {
                  "type": "string",
                  "extensions": {}
                },
                "type": {
                  "type": "string",
                  "extensions": {}
                },
                "useFrom": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "useTo": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                }
              }
            },
            "ModelVersion": {
              "title": "ModelVersion",
              "type": "object",
              "properties": {
                "catalogId": {
                  "type": "string",
                  "extensions": {}
                },
                "data": {
                  "$ref": "#/components/schemas/ModelData",
                  "extensions": {}
                },
                "domainId": {
                  "type": "string",
                  "extensions": {}
                },
                "id": {
                  "type": "string",
                  "extensions": {}
                },
                "imports": {
                  "type": "array",
                  "extensions": {}
                },
                "lastChanged": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "modelId": {
                  "type": "string",
                  "extensions": {}
                },
                "sourceVersion": {
                  "type": "string",
                  "extensions": {}
                },
                "status": {
                  "type": "string",
                  "extensions": {}
                },
                "title": {
                  "type": "string",
                  "extensions": {}
                },
                "useFrom": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "useTo": {
                  "type": "string",
                  "format": "date-time",
                  "extensions": {}
                },
                "user": {
                  "type": "string",
                  "extensions": {}
                },
                "versionInfo": {
                  "type": "string",
                  "extensions": {}
                },
                "versionNumber": {
                  "type": "integer",
                  "format": "int32",
                  "extensions": {}
                }
              }
            },
            "Domain": {
              "title": "Domain",
              "type": "object",
              "properties": {
                "catalogId": {
                  "type": "string",
                  "extensions": {}
                },
                "id": {
                  "type": "string",
                  "extensions": {}
                },
                "state": {
                  "type": "string",
                  "extensions": {}
                },
                "title": {
                  "type": "string",
                  "extensions": {}
                }
              }
            },
            "Catalog": {
              "title": "Catalog",
              "type": "object",
              "properties": {
                "id": {
                  "type": "string",
                  "extensions": {}
                },
                "title": {
                  "type": "string",
                  "extensions": {}
                }
              }
            }
          }
        }
      },
      "apiSpec": "{\n  \"swagger\": \"2.0\",\n  \"info\": {\n    \"description\": \"Modellkatalogtjeneste for SERES - domeneklient\",\n    \"version\": \"1.0\",\n    \"title\": \"SERES3 REPOSITORY\",\n    \"termsOfService\": \"Terms of service\",\n    \"contact\": {\n      \"name\": \"SERES brukerstøtte\",\n      \"url\": \"http://www.brreg.no/\",\n      \"email\": \"seres@brreg.no\"\n    },\n    \"license\": {\n      \"name\": \"License of API\",\n      \"url\": \"API license URL\"\n    }\n  },\n  \"host\": \"repository-test-seres-ut1.paas-nprd.brreg.no\",\n  \"basePath\": \"/\",\n  \"tags\": [{\n    \"name\": \"catalog-controller\",\n    \"description\": \"Catalog Controller\"\n  }, {\n    \"name\": \"change-controller\",\n    \"description\": \"Change Controller\"\n  }, {\n    \"name\": \"domain-controller\",\n    \"description\": \"Domain Controller\"\n  }, {\n    \"name\": \"model-controller\",\n    \"description\": \"Model Controller\"\n  }, {\n    \"name\": \"version-controller\",\n    \"description\": \"Version Controller\"\n  }\n  ],\n  \"paths\": {\n    \"/seres/v1/repository/catalogs\": {\n      \"get\": {\n        \"tags\": [\"catalog-controller\"],\n        \"summary\": \"list all catalogs\",\n        \"description\": \"Returns a list of all catalogs stored by the repository (currently restriced to 1000 catalogs)\",\n        \"operationId\": \"listCatalogUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Catalog\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"catalog-controller\"],\n        \"summary\": \"create a catalog\",\n        \"description\": \"Returns the created catalog\",\n        \"operationId\": \"createCatalogUsingPOST\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"query\",\n          \"description\": \"unique identifier of the catalog, usually a 9-digit (orgnumber)\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"title\",\n          \"in\": \"query\",\n          \"description\": \"the title of the catalog\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Catalog\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}\": {\n      \"get\": {\n        \"tags\": [\"catalog-controller\"],\n        \"summary\": \"get a specific catalog\",\n        \"description\": \"Returns the catalog\",\n        \"operationId\": \"getCatalogUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"the catalog identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Catalog\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"catalog-controller\"],\n        \"summary\": \"update the catalog\",\n        \"description\": \"returns the updated catalog\",\n        \"operationId\": \"updateCatalogUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"the catalog's unique identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"in\": \"body\",\n          \"name\": \"updatedCatalog\",\n          \"description\": \"the catalog with updated values\",\n          \"required\": false,\n          \"schema\": {\n            \"$ref\": \"#/definitions/Catalog\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Catalog\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/domains\": {\n      \"get\": {\n        \"tags\": [\"domain-controller\"],\n        \"summary\": \"list domains\",\n        \"description\": \"Returns a list of all domains under a specific catalog\",\n        \"operationId\": \"listDomainsUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/Domain\"\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"domain-controller\"],\n        \"summary\": \"create a domain\",\n        \"description\": \"Returns the created domain\",\n        \"operationId\": \"createDomainUsingPOST\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"title\",\n          \"in\": \"query\",\n          \"description\": \"the title of the domain\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Domain\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicauth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}\": {\n      \"get\": {\n        \"tags\": [\"domain-controller\"],\n        \"summary\": \"get a domain\",\n        \"description\": \"Returns the domain object requested\",\n        \"operationId\": \"getDomainUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Domain\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"domain-controller\"],\n        \"summary\": \"update a domain\",\n        \"description\": \"Updates the domain object\",\n        \"operationId\": \"updateDomainUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain identifier (base36)\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"in\": \"body\",\n          \"name\": \"updatedDomain\",\n          \"description\": \"the updated domain object\",\n          \"required\": false,\n          \"schema\": {\n            \"$ref\": \"#/definitions/Domain\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Domain\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicauth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/models\": {\n      \"get\": {\n        \"tags\": [\"model-controller\"],\n        \"summary\": \"list models\",\n        \"description\": \"Returns a the list of model objects in a domain\",\n        \"operationId\": \"listModelsUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/Model\"\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"model-controller\"],\n        \"summary\": \"create a model\",\n        \"description\": \"Returns the created model object\",\n        \"operationId\": \"createModelUsingPOST\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"title\",\n          \"in\": \"query\",\n          \"description\": \"title\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"type\",\n          \"in\": \"query\",\n          \"description\": \"type\",\n          \"required\": false,\n          \"type\": \"string\",\n          \"default\": \"tjenestemodell\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Model\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}\": {\n      \"get\": {\n        \"tags\": [\"model-controller\"],\n        \"summary\": \"get a model\",\n        \"description\": \"Returns a model object\",\n        \"operationId\": \"getModelUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Model\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"model-controller\"],\n        \"summary\": \"update a model\",\n        \"description\": \"Updated the values of the model object\",\n        \"operationId\": \"updateModelUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"in\": \"body\",\n          \"name\": \"updatedModel\",\n          \"description\": \"updatedModel\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/definitions/Model\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/Model\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/versions\": {\n      \"get\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"list versions\",\n        \"description\": \"Returns a list of version objects\",\n        \"operationId\": \"listVersionsUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"type\": \"array\",\n              \"items\": {\n                \"$ref\": \"#/definitions/ModelVersion\"\n              }\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"post\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"create a version\",\n        \"description\": \"Create the model version from scratch\",\n        \"operationId\": \"createVersionUsingPOST\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"title\",\n          \"in\": \"query\",\n          \"description\": \"title\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"in\": \"body\",\n          \"name\": \"data\",\n          \"description\": \"data\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/definitions/ModelData\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}\": {\n      \"get\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"get a version object\",\n        \"description\": \"get a specific version object\",\n        \"operationId\": \"getVersionUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      },\n      \"put\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"update a version\",\n        \"description\": \"creates a new version object by copying it from another version\",\n        \"operationId\": \"updateVersionUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"in\": \"body\",\n          \"name\": \"updatedVersion\",\n          \"description\": \"updatedVersion\",\n          \"required\": true,\n          \"schema\": {\n            \"$ref\": \"#/definitions/ModelVersion\"\n          }\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      },\n      \"delete\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"delete a version\",\n        \"description\": \"deletes the refered version\",\n        \"operationId\": \"deleteVersionUsingDELETE\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"type\": \"boolean\"\n            }\n          },\n          \"204\": {\n            \"description\": \"No Content\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/approve\": {\n      \"put\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"set state to 'publisert'\",\n        \"description\": \"changes the version state attribute to approved\",\n        \"operationId\": \"setStateToApproveUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/copy\": {\n      \"post\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"create a version by copy\",\n        \"description\": \"creates a new version object by copying it from another version\",\n        \"operationId\": \"copyVersionUsingPOST\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain identifier\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"the identifier of the model of which to store the new version in, must be within the domain and catalog\",\n          \"required\": false,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"the identifier of the source version to copy from\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/data\": {\n      \"get\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"getModel\",\n        \"operationId\": \"getModelUsingGET_1\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/history\": {\n      \"put\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"set state to 'historisk'\",\n        \"description\": \"changes the version state attribute to historic\",\n        \"operationId\": \"setStateToHistoryUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/catalogs/{catalog}/{domain}/{model}/{version}/reject\": {\n      \"put\": {\n        \"tags\": [\"version-controller\"],\n        \"summary\": \"set state to 'forkastet'\",\n        \"description\": \"changes the version state attribute to rejected\",\n        \"operationId\": \"setStateToRejectedUsingPUT\",\n        \"consumes\": [\"application/json\"],\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"catalog\",\n          \"in\": \"path\",\n          \"description\": \"catalog\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"domain\",\n          \"in\": \"path\",\n          \"description\": \"domain\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"model\",\n          \"in\": \"path\",\n          \"description\": \"model\",\n          \"required\": true,\n          \"type\": \"string\"\n        }, {\n          \"name\": \"version\",\n          \"in\": \"path\",\n          \"description\": \"version\",\n          \"required\": true,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/ModelVersion\"\n            }\n          },\n          \"201\": {\n            \"description\": \"Created\"\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        },\n        \"security\": [{\n          \"basicAuth\": []\n        }\n        ]\n      }\n    },\n    \"/seres/v1/repository/versions/{versionReference}/changelog\": {\n      \"get\": {\n        \"tags\": [\"change-controller\"],\n        \"summary\": \"version changelog\",\n        \"description\": \"Returns the change events that has occured to a specific model-version. Pagination is required: ?page=0&size=20\",\n        \"operationId\": \"listChangeEventsUsingGET\",\n        \"produces\": [\"application/json;charset=UTF-8\"],\n        \"parameters\": [{\n          \"name\": \"versionReference\",\n          \"in\": \"path\",\n          \"description\": \"the version reference catalogId_domainId_modelId_versionId_versionNumber\",\n          \"required\": false,\n          \"type\": \"string\"\n        }\n        ],\n        \"responses\": {\n          \"200\": {\n            \"description\": \"OK\",\n            \"schema\": {\n              \"$ref\": \"#/definitions/VersionChangeEvent\"\n            }\n          },\n          \"401\": {\n            \"description\": \"Unauthorized\"\n          },\n          \"403\": {\n            \"description\": \"Forbidden\"\n          },\n          \"404\": {\n            \"description\": \"Not Found\"\n          }\n        }\n      }\n    }\n  },\n  \"definitions\": {\n    \"Catalog\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        }\n      },\n      \"title\": \"Catalog\"\n    },\n    \"Domain\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"catalogId\": {\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"state\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        }\n      },\n      \"title\": \"Domain\"\n    },\n    \"Model\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"catalogId\": {\n          \"type\": \"string\"\n        },\n        \"domainId\": {\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"state\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"type\": {\n          \"type\": \"string\"\n        },\n        \"useFrom\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"useTo\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        }\n      },\n      \"title\": \"Model\"\n    },\n    \"ModelData\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"manifest\": {\n          \"type\": \"string\"\n        },\n        \"value\": {\n          \"type\": \"string\",\n          \"format\": \"byte\"\n        }\n      },\n      \"title\": \"ModelData\"\n    },\n    \"ModelImport\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"models\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"type\": \"string\"\n          }\n        },\n        \"timestamp\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"versionReference\": {\n          \"type\": \"string\"\n        }\n      },\n      \"title\": \"ModelImport\"\n    },\n    \"ModelVersion\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"catalogId\": {\n          \"type\": \"string\"\n        },\n        \"data\": {\n          \"$ref\": \"#/definitions/ModelData\"\n        },\n        \"domainId\": {\n          \"type\": \"string\"\n        },\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"imports\": {\n          \"type\": \"array\",\n          \"items\": {\n            \"$ref\": \"#/definitions/ModelImport\"\n          }\n        },\n        \"lastChanged\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"modelId\": {\n          \"type\": \"string\"\n        },\n        \"sourceVersion\": {\n          \"type\": \"string\"\n        },\n        \"status\": {\n          \"type\": \"string\"\n        },\n        \"title\": {\n          \"type\": \"string\"\n        },\n        \"useFrom\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"useTo\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"user\": {\n          \"type\": \"string\"\n        },\n        \"versionInfo\": {\n          \"type\": \"string\"\n        },\n        \"versionNumber\": {\n          \"type\": \"integer\",\n          \"format\": \"int32\"\n        }\n      },\n      \"title\": \"ModelVersion\"\n    },\n    \"VersionChangeEvent\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"operation\": {\n          \"type\": \"string\"\n        },\n        \"timestamp\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"userId\": {\n          \"type\": \"string\"\n        },\n        \"versionReference\": {\n          \"type\": \"string\"\n        },\n        \"versionState\": {\n          \"$ref\": \"#/definitions/ModelVersion\"\n        }\n      },\n      \"title\": \"VersionChangeEvent\"\n    },\n    \"VersionChangeRecord\": {\n      \"type\": \"object\",\n      \"properties\": {\n        \"id\": {\n          \"type\": \"string\"\n        },\n        \"operation\": {\n          \"type\": \"string\"\n        },\n        \"timestamp\": {\n          \"type\": \"string\",\n          \"format\": \"date-time\"\n        },\n        \"userId\": {\n          \"type\": \"string\"\n        },\n        \"versionReference\": {\n          \"type\": \"string\"\n        },\n        \"versionState\": {\n          \"$ref\": \"#/definitions/ModelVersion\"\n        }\n      },\n      \"title\": \"VersionChangeRecord\"\n    }\n  }\n}\n"
    },
    {
      "id": "05b3e72e-4579-4b64-a7b7-a80a9b2af85c",
      "apiSpecUrl": "https://oidc-ver2.difi.no/kontaktinfo-oauth2-server/rest/apis",
      "title": {
        "no": "REST-API for Kontakt- og reserversjonsregisteret (KRR)"
      },
      "description": {
        "no": "Dette er eit REST-API for å tilby funksjonalitet tilsvarende dagens SOAP-baserte oppslagstjeneste for KRR.\n\nTilgang til API-et styres med OAuth2-baserte access_tokens. Desse vert utstedt frå ID-porten si OAuth2-teneste.\n\nLes meir på https://difi.github.io/idporten-oidc-dokumentasjon/oidc_api_krr_user.html\n"
      },
      "publisher": {
        "uri": "http://data.brreg.no/enhetsregisteret/enhet/974760673",
        "id": "974760673",
        "name": "REGISTERENHETEN I BRØNNØYSUND",
        "orgPath": "/STAT/912660680/974760673",
        "prefLabel": {
          "no": "Brønnøysundregistrene"
        }
      },
      "formats": [
        "application/json",
        "application/jose",
        "*/*"
      ],
      "datasetReferences": [
        {
          "referenceType": {
            "uri": "dct:references",
            "code": "references",
            "prefLabel": {
              "en": "References",
              "nn": "Refererar",
              "nb": "Refererer"
            }
          },
          "source": {
            "uri": "https://data.norge.no/node/78",
            "prefLabel": {
              "nb": "Anleggsregisteret"
            }
          }
        }
      ],
      "openApi": {
        "openapi": "3.0.1",
        "info": {
          "title": "REST-API for Kontakt- og reserversjonsregisteret (KRR)",
          "description": "Dette er eit REST-API for å tilby funksjonalitet tilsvarende dagens SOAP-baserte oppslagstjeneste for KRR.\n\nTilgang til API-et styres med OAuth2-baserte access_tokens. Desse vert utstedt frå ID-porten si OAuth2-teneste.\n\nLes meir på https://difi.github.io/idporten-oidc-dokumentasjon/oidc_api_krr_user.html\n",
          "extensions": {}
        },
        "servers": [
          {
            "url": "//oidc-ver2.difi.no/kontaktinfo-oauth2-server/rest"
          }
        ],
        "tags": [
          {
            "name": "Person",
            "description": "Tilgang til data om innlogga brukar (brukaren knytt til access token).",
            "extensions": {}
          },
          {
            "name": "Personer",
            "description": "Hent ut opptil 1000 personar frå KRR pr. API-kall",
            "extensions": {}
          }
        ],
        "paths": {
          "/v1/person": {
            "get": {
              "tags": [
                "Person"
              ],
              "summary": "Hent KRR-data for brukaren knytt til access token",
              "description": "Minimumskrav til scope: user/kontaktinformasjon.read, user/spraak.read eller user/spraak.write. For å sjå kva data som blir gjeve ut basert på ulike scope, sjå https://difi.github.io/idporten-oidc-dokumentasjon/oidc_api_krr_user.html#bruk-av-oauth2",
              "operationId": "retrievePersonUsingGET",
              "parameters": [
                {
                  "name": "Authorization",
                  "in": "header",
                  "description": "Authorization",
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "responses": {
                "200": {
                  "description": "Ok",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/PersonResource",
                        "extensions": {}
                      }
                    },
                    "application/jose": {
                      "schema": {
                        "$ref": "#/components/schemas/PersonResource",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Invalid authorization token provided",
                  "headers": {
                    "WWW-Authenticate": {
                      "description": "error=\"invalid_token\" (not present if authorization header is missing or has the wrong type) and may contain error_description=\"...\" with further details. OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9",
                      "schema": {
                        "type": "string",
                        "extensions": {}
                      }
                    }
                  },
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    },
                    "application/jose": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden, required scopes not associated with provided token",
                  "headers": {
                    "WWW-Authenticate": {
                      "description": "error=\"insufficient_scope\" and may contain error_description=\"...\" and scope=\"...\". OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9",
                      "schema": {
                        "type": "string",
                        "extensions": {}
                      }
                    }
                  },
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    },
                    "application/jose": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                }
              },
              "security": [
                {
                  "OAuth2": []
                }
              ],
              "extensions": {}
            },
            "patch": {
              "tags": [
                "Person"
              ],
              "summary": "Oppdater brukaren sin språkpreferanse",
              "description": "Krev scope user/spraak.write. Kun for å endre språkpreferanse.",
              "operationId": "patchUserUsingPATCH",
              "parameters": [
                {
                  "name": "Authorization",
                  "in": "header",
                  "description": "Authorization",
                  "schema": {
                    "type": "string",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "userResourcePatch",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/person patch document"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "204": {
                  "description": "Query ok, no content in response",
                  "content": {
                    "*/*": {
                      "schema": {
                        "type": "object",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "400": {
                  "description": "Malformed patch document. Example: empty request body, if unrecognized properties exists in JSON request body, missing spraak-parameter, invalid person-identificator.",
                  "headers": {
                    "WWW-Authenticate": {
                      "description": "Header present in case of Oauth2-related errors. Will have multiple values, among them: error=\"invalid_request\" and may contain error_description=\"...\" with further details. OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9",
                      "schema": {
                        "type": "string",
                        "extensions": {}
                      }
                    }
                  },
                  "content": {
                    "*/*": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Invalid authorization token provided",
                  "headers": {
                    "WWW-Authenticate": {
                      "description": "error=\"invalid_token\" (not present if authorization header is missing or has the wrong type) and may contain error_description=\"...\" with further details. OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9",
                      "schema": {
                        "type": "string",
                        "extensions": {}
                      }
                    }
                  },
                  "content": {
                    "*/*": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden, required scopes not associated with provided token",
                  "headers": {
                    "WWW-Authenticate": {
                      "description": "error=\"insufficient_scope\" and may contain error_description=\"...\" and scope=\"...\". OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9",
                      "schema": {
                        "type": "string",
                        "extensions": {}
                      }
                    }
                  },
                  "content": {
                    "*/*": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "415": {
                  "description": "Unsupported patch document. Request has the wrong content type.",
                  "content": {
                    "*/*": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "422": {
                  "description": "Unprocessable request. For example wrong value for preferredLanguage",
                  "content": {
                    "*/*": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "500": {
                  "description": "Internal error.",
                  "content": {
                    "*/*": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                }
              },
              "security": [
                {
                  "OAuth2": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          },
          "/v1/personer": {
            "post": {
              "tags": [
                "Personer"
              ],
              "summary": "Hent ut 1 til 1000 personar frå KRR",
              "description": "Minimumskrav til scope: global/kontaktinformasjon.read, global/spraak.read eller global/spraak.write. For å sjå kva data som blir gjeve ut basert på ulike scope, sjå https://difi.github.io/idporten-oidc-dokumentasjon/oidc_api_krr.html#tilgjenglige-scopes",
              "operationId": "hentPersonerUsingPOST",
              "parameters": [
                {
                  "name": "present",
                  "in": "query",
                  "schema": {
                    "type": "boolean",
                    "extensions": {}
                  },
                  "extensions": {}
                }
              ],
              "requestBody": {
                "description": "request",
                "content": {
                  "application/json": {
                    "schema": {
                      "$ref": "#/components/schemas/HentPersonerRequest"
                    }
                  }
                },
                "required": true
              },
              "responses": {
                "200": {
                  "description": "Ok",
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/HentPersonerResponse",
                        "extensions": {}
                      }
                    },
                    "application/jose": {
                      "schema": {
                        "$ref": "#/components/schemas/HentPersonerResponse",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "401": {
                  "description": "Invalid authorization token provided",
                  "headers": {
                    "WWW-Authenticate": {
                      "description": "error=\"invalid_token\" (not present if authorization header is missing or has the wrong type) and may contain error_description=\"...\" with further details. OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9",
                      "schema": {
                        "type": "string",
                        "extensions": {}
                      }
                    }
                  },
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    },
                    "application/jose": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                },
                "403": {
                  "description": "Forbidden, required scopes not associated with provided token",
                  "headers": {
                    "WWW-Authenticate": {
                      "description": "error=\"insufficient_scope\" and may contain error_description=\"...\" and scope=\"...\". OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9",
                      "schema": {
                        "type": "string",
                        "extensions": {}
                      }
                    }
                  },
                  "content": {
                    "application/json": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    },
                    "application/jose": {
                      "schema": {
                        "$ref": "#/components/schemas/errors",
                        "extensions": {}
                      }
                    }
                  },
                  "extensions": {}
                }
              },
              "security": [
                {
                  "OAuth2": []
                }
              ],
              "extensions": {}
            },
            "extensions": {}
          }
        },
        "components": {
          "schemas": {
            "person patch document": {
              "title": "person patch document",
              "required": [
                "spraak"
              ],
              "type": "object",
              "properties": {
                "spraak": {
                  "type": "string",
                  "description": "ISO 639-1. Use empty string to delete user preference.",
                  "extensions": {},
                  "enum": [
                    "en",
                    "se",
                    "nb",
                    "nn",
                    "\"\""
                  ]
                }
              }
            },
            "ContactInfoResource": {
              "title": "ContactInfoResource",
              "type": "object",
              "properties": {
                "epostadresse": {
                  "type": "string",
                  "extensions": {}
                },
                "epostadresse_oppdatert": {
                  "type": "string",
                  "extensions": {}
                },
                "epostadresse_sist_verifisert": {
                  "type": "string",
                  "extensions": {}
                },
                "mobiltelefonnummer": {
                  "type": "string",
                  "extensions": {}
                },
                "mobiltelefonnummer_oppdatert": {
                  "type": "string",
                  "extensions": {}
                },
                "mobiltelefonnummer_sist_verifisert": {
                  "type": "string",
                  "extensions": {}
                }
              }
            },
            "DigitalPostResource": {
              "title": "DigitalPostResource",
              "type": "object",
              "properties": {
                "postkasseadresse": {
                  "type": "string",
                  "extensions": {}
                },
                "postkasseleverandoeradresse": {
                  "type": "string",
                  "extensions": {}
                }
              }
            },
            "HentPersonerRequest": {
              "title": "HentPersonerRequest",
              "type": "object",
              "properties": {
                "personidentifikatorer": {
                  "type": "array",
                  "extensions": {}
                }
              }
            },
            "links": {
              "title": "links",
              "type": "object",
              "properties": {
                "about": {
                  "type": "string",
                  "description": "Link to read more about the problem.",
                  "example": "https://http.cat/422",
                  "extensions": {}
                }
              }
            },
            "source": {
              "title": "source",
              "type": "object",
              "properties": {
                "pointer": {
                  "type": "string",
                  "description": "JSON-pointer to relevant field in request-body.",
                  "example": "/spraak",
                  "extensions": {}
                }
              }
            },
            "HentPersonerResponse": {
              "title": "HentPersonerResponse",
              "type": "object",
              "properties": {
                "personer": {
                  "type": "array",
                  "extensions": {}
                }
              }
            },
            "error": {
              "title": "error",
              "type": "object",
              "properties": {
                "status": {
                  "type": "string",
                  "description": "HTTP status code",
                  "example": "422",
                  "extensions": {}
                },
                "title": {
                  "type": "string",
                  "description": "a short, human-readable summary of the problem",
                  "example": "Invalid value",
                  "extensions": {}
                },
                "detail": {
                  "type": "string",
                  "description": "a human-readable explanation specific to this occurrence of the problem",
                  "example": "See documentation for list of possible values.",
                  "extensions": {}
                },
                "source": {
                  "$ref": "#/components/schemas/source",
                  "extensions": {}
                },
                "links": {
                  "$ref": "#/components/schemas/links",
                  "extensions": {}
                }
              },
              "description": "an error object according to JSON API specification."
            },
            "PersonResource": {
              "title": "PersonResource",
              "type": "object",
              "properties": {
                "personidentifikator": {
                  "type": "string",
                  "extensions": {}
                },
                "reservasjon": {
                  "type": "string",
                  "extensions": {},
                  "enum": [
                    "JA",
                    "NEI"
                  ]
                },
                "status": {
                  "type": "string",
                  "extensions": {},
                  "enum": [
                    "AKTIV",
                    "SLETTET",
                    "IKKE_REGISTRERT"
                  ]
                },
                "varslingsstatus": {
                  "type": "string",
                  "extensions": {},
                  "enum": [
                    "KAN_IKKE_VARSLES",
                    "KAN_VARSLES"
                  ]
                },
                "kontaktinformasjon": {
                  "$ref": "#/components/schemas/ContactInfoResource",
                  "extensions": {}
                },
                "digital_post": {
                  "$ref": "#/components/schemas/DigitalPostResource",
                  "extensions": {}
                },
                "sertifikat": {
                  "type": "string",
                  "extensions": {}
                },
                "spraak": {
                  "type": "string",
                  "extensions": {}
                },
                "spraak_oppdatert": {
                  "type": "string",
                  "extensions": {}
                }
              },
              "description": "Kva felt ein får ut i responsen er avhengig av kva scope ein har, sjå https://difi.github.io/idporten-oidc-dokumentasjon/oidc_api_krr.html#tilgjenglige-scopes"
            },
            "errors": {
              "title": "errors",
              "type": "object",
              "properties": {
                "errors": {
                  "type": "array",
                  "extensions": {}
                }
              },
              "description": "an error response conforming to JSON API spec.  http://jsonapi.org/format/#errors"
            }
          },
          "securitySchemes": {
            "OAuth2": {
              "type": "OAUTH2",
              "flows": {},
              "extensions": {}
            }
          }
        }
      },
      "apiSpec": "{\"swagger\":\"2.0\",\"info\":{\"description\":\"Dette er eit REST-API for å tilby funksjonalitet tilsvarende dagens SOAP-baserte oppslagstjeneste for KRR.\\n\\nTilgang til API-et styres med OAuth2-baserte access_tokens. Desse vert utstedt frå ID-porten si OAuth2-teneste.\\n\\nLes meir på https://difi.github.io/idporten-oidc-dokumentasjon/oidc_api_krr_user.html\\n\",\"title\":\"REST-API for Kontakt- og reserversjonsregisteret (KRR)\"},\"host\":\"oidc-ver2.difi.no\",\"basePath\":\"/kontaktinfo-oauth2-server/rest\",\"tags\":[{\"name\":\"Person\",\"description\":\"Tilgang til data om innlogga brukar (brukaren knytt til access token).\"},{\"name\":\"Personer\",\"description\":\"Hent ut opptil 1000 personar frå KRR pr. API-kall\"}],\"paths\":{\"/v1/person\":{\"get\":{\"tags\":[\"Person\"],\"summary\":\"Hent KRR-data for brukaren knytt til access token\",\"description\":\"Minimumskrav til scope: user/kontaktinformasjon.read, user/spraak.read eller user/spraak.write. For å sjå kva data som blir gjeve ut basert på ulike scope, sjå https://difi.github.io/idporten-oidc-dokumentasjon/oidc_api_krr_user.html#bruk-av-oauth2\",\"operationId\":\"retrievePersonUsingGET\",\"produces\":[\"application/json\",\"application/jose\"],\"parameters\":[{\"name\":\"Authorization\",\"in\":\"header\",\"description\":\"Authorization\",\"required\":false,\"type\":\"string\"}],\"responses\":{\"200\":{\"description\":\"Ok\",\"schema\":{\"$ref\":\"#/definitions/PersonResource\"}},\"401\":{\"description\":\"Invalid authorization token provided\",\"schema\":{\"$ref\":\"#/definitions/errors\"},\"headers\":{\"WWW-Authenticate\":{\"type\":\"string\",\"description\":\"error=\\\"invalid_token\\\" (not present if authorization header is missing or has the wrong type) and may contain error_description=\\\"...\\\" with further details. OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9\"}}},\"403\":{\"description\":\"Forbidden, required scopes not associated with provided token\",\"schema\":{\"$ref\":\"#/definitions/errors\"},\"headers\":{\"WWW-Authenticate\":{\"type\":\"string\",\"description\":\"error=\\\"insufficient_scope\\\" and may contain error_description=\\\"...\\\" and scope=\\\"...\\\". OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9\"}}}},\"security\":[{\"OAuth2\":[]}]},\"patch\":{\"tags\":[\"Person\"],\"summary\":\"Oppdater brukaren sin språkpreferanse\",\"description\":\"Krev scope user/spraak.write. Kun for å endre språkpreferanse.\",\"operationId\":\"patchUserUsingPATCH\",\"consumes\":[\"application/json\"],\"produces\":[\"*/*\"],\"parameters\":[{\"name\":\"Authorization\",\"in\":\"header\",\"description\":\"Authorization\",\"required\":false,\"type\":\"string\"},{\"in\":\"body\",\"name\":\"userResourcePatch\",\"description\":\"userResourcePatch\",\"required\":true,\"schema\":{\"$ref\":\"#/definitions/person patch document\"}}],\"responses\":{\"204\":{\"description\":\"Query ok, no content in response\",\"schema\":{\"type\":\"object\"}},\"400\":{\"description\":\"Malformed patch document. Example: empty request body, if unrecognized properties exists in JSON request body, missing spraak-parameter, invalid person-identificator.\",\"schema\":{\"$ref\":\"#/definitions/errors\"},\"headers\":{\"WWW-Authenticate\":{\"type\":\"string\",\"description\":\"Header present in case of Oauth2-related errors. Will have multiple values, among them: error=\\\"invalid_request\\\" and may contain error_description=\\\"...\\\" with further details. OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9\"}}},\"401\":{\"description\":\"Invalid authorization token provided\",\"schema\":{\"$ref\":\"#/definitions/errors\"},\"headers\":{\"WWW-Authenticate\":{\"type\":\"string\",\"description\":\"error=\\\"invalid_token\\\" (not present if authorization header is missing or has the wrong type) and may contain error_description=\\\"...\\\" with further details. OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9\"}}},\"403\":{\"description\":\"Forbidden, required scopes not associated with provided token\",\"schema\":{\"$ref\":\"#/definitions/errors\"},\"headers\":{\"WWW-Authenticate\":{\"type\":\"string\",\"description\":\"error=\\\"insufficient_scope\\\" and may contain error_description=\\\"...\\\" and scope=\\\"...\\\". OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9\"}}},\"415\":{\"description\":\"Unsupported patch document. Request has the wrong content type.\",\"schema\":{\"$ref\":\"#/definitions/errors\"}},\"422\":{\"description\":\"Unprocessable request. For example wrong value for preferredLanguage\",\"schema\":{\"$ref\":\"#/definitions/errors\"}},\"500\":{\"description\":\"Internal error.\",\"schema\":{\"$ref\":\"#/definitions/errors\"}}},\"security\":[{\"OAuth2\":[]}]}},\"/v1/personer\":{\"post\":{\"tags\":[\"Personer\"],\"summary\":\"Hent ut 1 til 1000 personar frå KRR\",\"description\":\"Minimumskrav til scope: global/kontaktinformasjon.read, global/spraak.read eller global/spraak.write. For å sjå kva data som blir gjeve ut basert på ulike scope, sjå https://difi.github.io/idporten-oidc-dokumentasjon/oidc_api_krr.html#tilgjenglige-scopes\",\"operationId\":\"hentPersonerUsingPOST\",\"consumes\":[\"application/json\"],\"produces\":[\"application/json\",\"application/jose\"],\"parameters\":[{\"name\":\"present\",\"in\":\"query\",\"required\":false,\"type\":\"boolean\"},{\"in\":\"body\",\"name\":\"request\",\"description\":\"request\",\"required\":true,\"schema\":{\"$ref\":\"#/definitions/HentPersonerRequest\"}}],\"responses\":{\"200\":{\"description\":\"Ok\",\"schema\":{\"$ref\":\"#/definitions/HentPersonerResponse\"}},\"401\":{\"description\":\"Invalid authorization token provided\",\"schema\":{\"$ref\":\"#/definitions/errors\"},\"headers\":{\"WWW-Authenticate\":{\"type\":\"string\",\"description\":\"error=\\\"invalid_token\\\" (not present if authorization header is missing or has the wrong type) and may contain error_description=\\\"...\\\" with further details. OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9\"}}},\"403\":{\"description\":\"Forbidden, required scopes not associated with provided token\",\"schema\":{\"$ref\":\"#/definitions/errors\"},\"headers\":{\"WWW-Authenticate\":{\"type\":\"string\",\"description\":\"error=\\\"insufficient_scope\\\" and may contain error_description=\\\"...\\\" and scope=\\\"...\\\". OAuth2-related errors - see https://tools.ietf.org/html/rfc6750#page-9\"}}}},\"security\":[{\"OAuth2\":[]}]}}},\"securityDefinitions\":{\"OAuth2\":{\"type\":\"oauth2\",\"scopes\":{\"user/spraak.read\":\"Gir tilgang til innlogga brukar sin språkpreferanse\",\"user/spraak.write\":\"Gir tilgang til å oppdatere innlogga brukar sin språkpreferanse\",\"global/spraak.read\":\"Gir tilgang til å lese personar sin språkpreferanse\",\"user/kontaktinformasjon.read\":\"Gir tilgang til innlogga brukar si e-postadresse og mobilnummer + tidspunkt for sist oppdatering\",\"global/kontaktinformasjon.read\":\"Gir tilgang til personar sine e-postadresser og mobilnummer + tidspunkt for sist oppdatering\",\"user/varslingsstatus.read\":\"Gir tilgang til innlogga brukar sin status for om kontaktinfomasjonen kan brukast for varsling iht. eForvaltningsforskrifta sin §32\",\"global/varslingsstatus.read\":\"Gir tilgang til status for om kontaktinfomasjonen kan brukast for varsling iht. eForvaltningsforskrifta sin §32\",\"user/sikkerdigitalpost.read\":\"Gir tilgang til innlogga brukar si adresse for digital post til innbyggar\",\"global/sikkerdigitalpost.read\":\"Gir tilgang til adresse for digital post til innbyggar\",\"user/sertifikat.read\":\"Gir tilgang til innlogga bruker sitt krypteringssertifikat ved sending av digital post\",\"global/sertifikat.read\":\"Gir tilgang til personar sitt krypteringssertifikat ved sending av digital post\"}}},\"definitions\":{\"ContactInfoResource\":{\"type\":\"object\",\"properties\":{\"epostadresse\":{\"type\":\"string\"},\"epostadresse_oppdatert\":{\"type\":\"string\"},\"epostadresse_sist_verifisert\":{\"type\":\"string\"},\"mobiltelefonnummer\":{\"type\":\"string\"},\"mobiltelefonnummer_oppdatert\":{\"type\":\"string\"},\"mobiltelefonnummer_sist_verifisert\":{\"type\":\"string\"}},\"title\":\"ContactInfoResource\"},\"DigitalPostResource\":{\"type\":\"object\",\"properties\":{\"postkasseadresse\":{\"type\":\"string\"},\"postkasseleverandoeradresse\":{\"type\":\"string\"}},\"title\":\"DigitalPostResource\"},\"HentPersonerRequest\":{\"type\":\"object\",\"properties\":{\"personidentifikatorer\":{\"type\":\"array\",\"items\":{\"type\":\"string\"}}},\"title\":\"HentPersonerRequest\"},\"HentPersonerResponse\":{\"type\":\"object\",\"properties\":{\"personer\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/PersonResource\"}}},\"title\":\"HentPersonerResponse\"},\"PersonResource\":{\"type\":\"object\",\"properties\":{\"personidentifikator\":{\"type\":\"string\"},\"reservasjon\":{\"type\":\"string\",\"enum\":[\"JA\",\"NEI\"]},\"status\":{\"type\":\"string\",\"enum\":[\"AKTIV\",\"SLETTET\",\"IKKE_REGISTRERT\"]},\"varslingsstatus\":{\"type\":\"string\",\"enum\":[\"KAN_IKKE_VARSLES\",\"KAN_VARSLES\"]},\"kontaktinformasjon\":{\"$ref\":\"#/definitions/ContactInfoResource\"},\"digital_post\":{\"$ref\":\"#/definitions/DigitalPostResource\"},\"sertifikat\":{\"type\":\"string\"},\"spraak\":{\"type\":\"string\"},\"spraak_oppdatert\":{\"type\":\"string\"}},\"title\":\"PersonResource\",\"description\":\"Kva felt ein får ut i responsen er avhengig av kva scope ein har, sjå https://difi.github.io/idporten-oidc-dokumentasjon/oidc_api_krr.html#tilgjenglige-scopes\"},\"error\":{\"type\":\"object\",\"properties\":{\"status\":{\"type\":\"string\",\"example\":422,\"description\":\"HTTP status code\"},\"title\":{\"type\":\"string\",\"example\":\"Invalid value\",\"description\":\"a short, human-readable summary of the problem\"},\"detail\":{\"type\":\"string\",\"example\":\"See documentation for list of possible values.\",\"description\":\"a human-readable explanation specific to this occurrence of the problem\"},\"source\":{\"$ref\":\"#/definitions/source\"},\"links\":{\"$ref\":\"#/definitions/links\"}},\"title\":\"error\",\"description\":\"an error object according to JSON API specification.\"},\"errors\":{\"type\":\"object\",\"properties\":{\"errors\":{\"type\":\"array\",\"items\":{\"$ref\":\"#/definitions/error\"}}},\"title\":\"errors\",\"description\":\"an error response conforming to JSON API spec.  http://jsonapi.org/format/#errors\"},\"links\":{\"type\":\"object\",\"properties\":{\"about\":{\"type\":\"string\",\"example\":\"https://http.cat/422\",\"description\":\"Link to read more about the problem.\"}},\"title\":\"links\"},\"person patch document\":{\"type\":\"object\",\"required\":[\"spraak\"],\"properties\":{\"spraak\":{\"type\":\"string\",\"description\":\"ISO 639-1. Use empty string to delete user preference.\",\"enum\":[\"en\",\"se\",\"nb\",\"nn\",\"\\\"\\\"\"]}},\"title\":\"person patch document\"},\"source\":{\"type\":\"object\",\"properties\":{\"pointer\":{\"type\":\"string\",\"example\":\"/spraak\",\"description\":\"JSON-pointer to relevant field in request-body.\"}},\"title\":\"source\"}}}",
      "apiDocUrl": "https://oidc-ver2.difi.no/kontaktinfo-oauth2-server/rest/swagger-ui.html"
    }
  ],
  "aggregations": {
    "formats": {
      "buckets": [
        {
          "key": "application/json",
          "count": 2
        },
        {
          "key": "application/json;charset=UTF-8",
          "count": 2
        },
        {
          "key": "*/*",
          "count": 1
        },
        {
          "key": "application/jose",
          "count": 1
        },
        {
          "key": "application/ld+json",
          "count": 1
        },
        {
          "key": "application/rdf+xml",
          "count": 1
        },
        {
          "key": "text/turtle",
          "count": 1
        }
      ]
    },
    "orgPath": {
      "buckets": [
        {
          "key": "/STAT",
          "count": 4
        },
        {
          "key": "/STAT/912660680",
          "count": 4
        },
        {
          "key": "/STAT/912660680/974760673",
          "count": 4
        }
      ]
    },
    "accessRights": {
      "buckets": [
        {
          "key": "MISSING",
          "count": 3
        },
        {
          "key": "NON_PUBLIC",
          "count": 1
        },
        {
          "key": "RESTRICTED",
          "count": 1
        }
      ]
    }
  }
}
